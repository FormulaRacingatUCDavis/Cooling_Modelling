# encoding: utf-8
# 2025 R2
SetScriptVersion(Version="25.2.170")
template1 = GetTemplate(TemplateName="Fluid Flow with Fluent Meshing")
system1 = template1.CreateSystem()
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.SetFile(FilePath=GetAbsoluteUserPathName("GitHub/Cooling_Modelling/Subpack Conjugate Heat Transfer/the new test_files/dp0/FFF/DM/the new cad.dsco"))
geometry1.Edit(IsDiscoveryGeometry=True)
geometry1.Exit()
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.UpdateUpstreamComponents()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=4, NumberOfProcessors=4))
tGridData1 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=4))
mesh1 = system1.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command="""/file/set-tui-version \"25.2\"
Graphics driver currently in use: dx11
(cx-gui-do cx-activate-tab-index \"NavigationPane*Frame1(TreeTab)\" 0)(cx-gui-do cx-activate-item \"Key Behavioral Changes*PanelButtons*PushButton1(OK)\")""")
setup1.SendCommand(Command='(%py-exec "preferences.General.StartupMessages.KeyBehavioralChangesMessage.set_state(True)")')
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.set_state(r'm')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.set_state(r'm^2')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.set_state(r'm^3')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\Owner\\AppData\\Local\\Temp\\WB_Owner_15764_10\\wbnew_files\\dp0\\FFF\\DM\\FFF.dsco',r'FileNames': r'C:/Users/Owner/Documents/GitHub/Cooling_Modelling/Subpack Conjugate Heat Transfer/the new test_files/dp0/FFF/DM/the new cad with stationary walls.dsco',r'ImportType': r'Multiple Files',r'LengthUnit': r'm',})\")")
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=4))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command="""/file/set-tui-version \"25.2\"
Graphics driver currently in use: dx11
(cx-gui-do cx-activate-tab-index \"NavigationPane*Frame1(TreeTab)\" 0)(cx-gui-do cx-activate-item \"Key Behavioral Changes*PanelButtons*PushButton1(OK)\")""")
setup1.SendCommand(Command='(%py-exec "preferences.General.StartupMessages.KeyBehavioralChangesMessage.set_state(True)")')
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.set_state(r'm')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.set_state(r'm^2')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.set_state(r'm^3')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\Owner\\AppData\\Local\\Temp\\WB_Owner_15764_10\\wbnew_files\\dp0\\FFF\\DM\\FFF.dsco',r'FileNames': r'C:/Users/Owner/Documents/GitHub/Cooling_Modelling/Subpack Conjugate Heat Transfer/the new test_files/dp0/FFF/DM/the new cad with stationary walls.dsco',r'ImportType': r'Multiple Files',r'LengthUnit': r'm',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'the-new-cad-with-stationary-walls-solid'],r'BOIGrowthRate': 1.2,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.005,r'MinSize': 0.001,},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'CappingRequired': r'No',r'InvokeShareTopology': r'Yes',r'Multizone': r'No',r'NonConformal': r'No',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 80,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SetupType': r'The geometry consists of both fluid and solid regions and/or voids',r'WallToInternal': r'No',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(Arguments={r'v1': True,}, SetupTypeChanged=True)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Apply Share Topology'].Arguments.set_state({r'GapDistance': 0.001,r'InterfaceSelect': r'Manual',})\")")
meshComponent1.Reset()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=4))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command="""/file/set-tui-version \"25.2\"
Graphics driver currently in use: dx11
(cx-gui-do cx-activate-tab-index \"NavigationPane*Frame1(TreeTab)\" 0)(cx-gui-do cx-activate-item \"Key Behavioral Changes*PanelButtons*PushButton1(OK)\")""")
setup1.SendCommand(Command='(%py-exec "preferences.General.StartupMessages.KeyBehavioralChangesMessage.set_state(True)")')
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.set_state(r'm')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.set_state(r'm^2')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.set_state(r'm^3')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\Owner\\AppData\\Local\\Temp\\WB_Owner_15764_10\\wbnew_files\\dp0\\FFF\\DM\\FFF.dsco',r'FileNames': r'C:/Users/Owner/Documents/GitHub/Cooling_Modelling/Subpack Conjugate Heat Transfer/the new test_files/dp0/FFF/DM/the new cad with stationary walls.dsco',r'ImportType': r'Multiple Files',r'LengthUnit': r'm',})\")")
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=4))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command="""/file/set-tui-version \"25.2\"
Graphics driver currently in use: dx11
(cx-gui-do cx-activate-tab-index \"NavigationPane*Frame1(TreeTab)\" 0)(cx-gui-do cx-activate-item \"Key Behavioral Changes*PanelButtons*PushButton1(OK)\")""")
setup1.SendCommand(Command='(%py-exec "preferences.General.StartupMessages.KeyBehavioralChangesMessage.set_state(True)")')
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.set_state(r'm')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.set_state(r'm^2')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.set_state(r'm^3')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\Owner\\AppData\\Local\\Temp\\WB_Owner_15764_10\\wbnew_files\\dp0\\FFF\\DM\\FFF.dsco',r'FileNames': r'C:/Users/Owner/Documents/GitHub/Cooling_Modelling/Subpack Conjugate Heat Transfer/the new test_files/dp0/FFF/DM/the new cad with stationary walls.dsco',r'ImportType': r'Multiple Files',r'LengthUnit': r'm',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'the-new-cad-with-stationary-walls-solid'],r'BOIGrowthRate': 1.2,r'BOISize': 0.002,r'BOIZoneorLabel': r'label',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.005,r'MinSize': 0.001,},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'CappingRequired': r'No',r'InvokeShareTopology': r'Yes',r'Multizone': r'No',r'NonConformal': r'No',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 80,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SetupType': r'The geometry consists of both fluid and solid regions and/or voids',r'WallToInternal': r'No',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(Arguments={r'v1': True,}, SetupTypeChanged=True)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Apply Share Topology'].Arguments.set_state({r'GapDistance': 0.005,r'InterfaceSelect': r'Manual',})\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
